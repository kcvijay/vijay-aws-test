{
  "version": 3,
  "sources": ["../../../app/routes/invoices.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/invoices.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/invoices.$id.tsx\");\n  import.meta.hot.lastModified = \"1718814557073.7979\";\n}\n// REMIX HMR END\n\nimport { Link } from 'react-router-dom';\nimport { formatDateForInput } from '../utils/dates';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\nimport { getInvoice, updateInvoice } from '~/actions/crud';\nexport async function loader({\n  params\n}) {\n  try {\n    const invoice = await getInvoice(params.id);\n    return {\n      data: invoice[0]\n    };\n  } catch (err) {\n    throw {\n      error: 'Error'\n    };\n  }\n}\nexport const action = async ({\n  params,\n  request\n}) => {\n  const formData = await request.formData();\n  const invoice = {\n    invoicee: formData.get('invoicee'),\n    invoiceddate: new Date(formData.get('invoicedDate')),\n    duedate: new Date(formData.get('dueDate')),\n    amount: Number(formData.get('amount')),\n    currency: formData.get('currency'),\n    state: formData.get('state')\n  };\n  try {\n    await updateInvoice(params.id, invoice);\n    return redirect('/invoices');\n  } catch (error) {\n    return json({\n      error: 'Failed to update the invoice'\n    }, {\n      status: 500\n    });\n  }\n};\nexport default function InvoiceEdit() {\n  _s();\n  const {\n    data\n  } = useLoaderData();\n  const actionData = useActionData();\n  return <div className='h-full md:flex justify-center items-center'>\n      <div className='p-4'>\n        <h2 className='text-gray-500 mb-2'>\n          <span className='font-bold mr-2'>#</span>\n          {data?.invoiceid}\n        </h2>\n        <hr />\n        <Form method='post' className='mt-6' reloadDocument>\n          <fieldset className='flex gap-2 items-center'>\n            <label className='font-bold w-32' htmlFor='invoicee'>\n              Invoicee\n            </label>\n            <input className='p-2 border rounded-md w-56' type='text' name='invoicee' id='invoicee' defaultValue={data?.invoicee} />\n          </fieldset>\n          <fieldset className='flex gap-2 mt-4 items-center'>\n            <label className='font-bold w-32' htmlFor='invoicedDate'>\n              Invoiced\n            </label>\n            <input className='p-2 border rounded-md w-56' type='date' name='invoicedDate' id='invoicedDate' defaultValue={data && formatDateForInput(data?.invoiceddate)} />\n          </fieldset>\n          <fieldset className='flex gap-2 mt-4 items-center'>\n            <label className='font-bold w-32' htmlFor='dueDate'>\n              Due\n            </label>\n            <input className='p-2 border rounded-md w-56' type='date' name='dueDate' id='dueDate' defaultValue={data && formatDateForInput(data?.duedate)} />\n          </fieldset>\n          <fieldset className='flex gap-2 mt-4 items-center'>\n            <label className='font-bold w-32' htmlFor='amount'>\n              Amount\n            </label>\n            <div>\n              <input className='p-2 border rounded-md w-56' type='number' name='amount' id='amount' step='0.01' defaultValue={data?.amount} />\n            </div>\n            <div>\n              <input className='p-2 border rounded-md w-20' type='text' name='currency' id='currency' defaultValue={data?.currency} />\n            </div>\n          </fieldset>\n          <fieldset className='flex gap-2 mt-4 items-center'>\n            <label className='font-bold w-32' htmlFor='state'>\n              State\n            </label>\n            <input className='p-2 border rounded-md w-56' type='text' name='state' id='state' defaultValue={data?.state} />\n          </fieldset>\n          <div className='flex gap-4 justify-between items-center mt-8'>\n            <button className='py-2 px-4 bg-red-600 rounded-md text-white'>\n              Delete invoice\n            </button>\n            <div className='flex gap-4 items-center'>\n              <Link className='text-red-600' to='/invoices'>\n                Cancel\n              </Link>\n              <button type='submit' className='py-2 px-4 bg-green-100 text-green-600 rounded-md'>\n                Save\n              </button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>;\n}\n_s(InvoiceEdit, \"LbyDs3+6gI9n/HN+I7m7nCrGbtc=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = InvoiceEdit;\nvar _c;\n$RefreshReg$(_c, \"InvoiceEdit\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
